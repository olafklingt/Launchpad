TITLE:: LPSlider
summary:: a Launchpad-GUI-Element (LPView subclass)
categories:: Launchpad
related:: Classes/LPButton, Classes/LPButtonArray, Classes/LPColorArea, Classes/LPFaderV, Classes/LPFaderH, Classes/LPInvisibleButtonArray, Classes/LPLED, Classes/LPPad, Classes/LPPushButton, Classes/LPPushStepButton, Classes/LPRange, Classes/LPSlider, Classes/LPSwitchSlider, Classes/LPView

DESCRIPTION::
A Lauchpad-GUI-Element (LPView subclass) which is implementing a slider.
The represented value is linear between 0 and 1.

DOCUMENTATION HAS BEEN DONE without Launchpad at hand

CLASSMETHODS::

COPYMETHOD:: LPView *new

Creates a new LPSlider that needs to be initialized further for use.

ARGUMENT:: range
A LPRange you will get from Lauchpad.

ARGUMENT:: onfront
A function which will be called when the view put on the front of the Lauchpad.

ARGUMENT:: onhide
A function which will be called when the view is removed from the Lauchpad.

returns:: a LPSlider

INSTANCEMETHODS::

METHOD:: default

Value to initialize the fader and to which the fader can be reset.

METHOD:: incrementArray

A array with values that are added to the value of the Fader. nil resets the value to default.

METHOD:: action

A function that is called when a Button on the Launchpad is pushed. The function gets as first argument the LPSlider itself.

METHOD:: background

Color of the background given as a symbol. (\green,\red, \amber, \yellow, \orange)

METHOD:: color

Color of the value given as a symbol. (\green,\red, \amber, \yellow, \orange)


METHOD:: front

Puts the LPSlider on the front of the Launchpad. (like open a GUI).

ARGUMENT::  ... args

arguments which will forwarded to the onfront-function.

Hides the LPSlider from the Launchpad.

METHOD:: hide

Hides the LPSlider from the Launchpad.

ARGUMENT::  updateLEDs

if LEDs should be updated or not.
To not update LEDs can make the response faster if after a close something else is opened.

ARGUMENT::  ... args

further arguments will forwarded to the onhide-function.

EXAMPLES::

code::
a=LPSlider(Launchpad.getRange(0,1,0,7));
a.incrementArray=[1/80,1/160,1/400,nil,1/ -400,1/ -160,1/ -80];
a.color_(\amber);
a.background_(\green);
a.action={|s|s.value.debug(\slidervalue)};
a.default = 0.6
a.front
::
