TITLE:: Launchpad
summary:: A Class to model GUI like behaviour around the Novation Lauchpad Controller
categories::  Classes
related:: Classes/LPButton, Classes/LPButtonArray, Classes/LPColorArea, Classes/LPFaderV, Classes/LPFaderH, Classes/LPInvisibleButtonArray, Classes/LPLED, Classes/LPPad, Classes/LPPushButton, Classes/LPPushStepButton, Classes/LPRange, Classes/LPSlider, Classes/LPSwitchSlider, Classes/LPView

DESCRIPTION::
The Interface is designed around the concept that you like to make your launchpad behave like a GUI with Buttons and Sliders.

To use the Lauchpad clases it has to be initialized with Lauchpad.initMIDI .

The class gets mostly used for the GetRange function that returns a LPRange that holds references to the Launchpad LED-Buttons.



METHOD:: getRange
A method to get a Range on the launchpad to put a GUI-element on it.

ARGUMENT:: fx
from value X

ARGUMENT:: fy
and value Y

ARGUMENT:: tx
to value X

ARGUMENT:: ty
and value Y

returns:: a LPRange

METHOD:: resetPads
reset all LEDs to black and empty the responder function lists.

METHOD:: resetLED
reset all LEDs to make them black

METHOD:: setContrast
set the contrast acording to the Launchpad Manual.

ARGUMENT:: num

ARGUMENT:: denum

METHOD:: xyMode
set Launchpad to XY-Mode (as described in the Lauchpad Manual) its the default mode.

METHOD:: drumMode
set Launchpad to Drum-Mode (as described in the Lauchpad Manual), but it is not used by the Launchpad GUI system.

METHOD:: setLED
set an LED on the Launchpad. (this is normaly implicitly called from the Lauchpad-GUI-Element).

ARGUMENT:: x
position on the x axis.

ARGUMENT:: y
position on the y axis.

ARGUMENT:: val
a velocity value (which has to be Coded according to the Lauchpad Manual).
to generate proper velocities use LPLED.

code::
Launchpad.setLED(1,2,LPLED.amber(3).vel);
Launchpad.setLED(2,4,LPLED.green(2).vel);
Launchpad.setLED(3,5,LPLED.red(1).vel);
::



INSTANCEMETHODS::

EXAMPLES::

code::
Launchpad.initMIDI; // before the Launchpad can be used it has to be initialized


::